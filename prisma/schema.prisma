// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id @default(cuid())
  email            String          @unique
  name             String
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  deleteAt         DateTime?
  leaderOf         Project[]       @relation("LeaderOf")
  collaboratorOf   Project[]       @relation("CollaboratorOf")
  assignmentArea   AssignmentArea? @relation(fields: [assignmentAreaId], references: [id])
  assignmentAreaId String?
  position         String
  identification   String
  permissions      Json?
  avatar           String
  notifications    Json?
}

model Project {
  id            String      @id @default(cuid())
  name          String
  description   String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  procedures    Procedure[]
  leader        User        @relation("LeaderOf", fields: [leaderId], references: [id])
  leaderId      String
  places        Json
  transitions   Json
  requirements  Json
  collaborators User[]      @relation("CollaboratorOf")
}

model Procedure {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  state     Json

  projectId String
  Project   Project? @relation(fields: [projectId], references: [id])
}

model Level {
  id          String @id @default(cuid())
  name        String @unique
  description String
  advance     Int    @default(0)
  percentage  Int    @default(0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleteAt  DateTime?

  levelCategoryId String
  Category        LevelCategory @relation(fields: [levelCategoryId], references: [id])

  PreviousLevelId String? @unique
  PreviousLevel   Level?  @relation("LevelSequence", fields: [PreviousLevelId], references: [id])
  NextLevel       Level?  @relation("LevelSequence")
}

model LevelCategory {
  id          String   @id @default(cuid())
  name        String   @unique
  description String
  Levels      Level[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model AssignmentArea {
  id          String    @id @default(cuid())
  name        String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deleteAt    DateTime?

  PreviousAreaId String?         @unique
  PreviousArea   AssignmentArea? @relation("AreaSequence", fields: [PreviousAreaId], references: [id])
  NextArea       AssignmentArea? @relation("AreaSequence")
  User           User[]
}
